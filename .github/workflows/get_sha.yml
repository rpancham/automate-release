name: Get Image SHAs from Quay.io

on:
  workflow_dispatch:
    inputs:
      organizations:
        description: 'Select Organizations'
        required: true
        type: choice
        options:
          - 'opendatahub'
          - 'modh'
      operation:
        description: 'Choose single repo or all repos'
        required: true
        type: choice
        default: 'all'
        options:
          - 'all'
          - 'single'
      repository:
        description: 'Select Repository (required if single operation)'
        required: false
        type: choice
        options:
          - 'odh-model-controller'
          - 'caikit-tgis-serving'
          - 'caikit-nlp'
          - 'text-generation-inference'
          - 'openvino_model_server'
          - 'vllm'
      tag_Name:
        description: 'add tag Name to fetch its latest SHA'
        required: true
      
jobs:
  get-shas:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Skopeo
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo
      - name: Log in to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
        
      - name: Retrieve Image SHAs
        id: get-shas
        env:
          QUAY_IO_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_IO_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          repositories=(
            "odh-model-controller"
            "caikit-tgis-serving"
            "caikit-nlp"
            "text-generation-inference"
            "openvino_model_server"
            "vllm"
          )
          imageOutput=""
          for repo in "${repositories[@]}"; do
            echo "Retrieving SHAs for $repo"
            imageName="quay.io/${{ github.event.inputs.organizations }}/$repo:${{ github.event.inputs.tag_Name }}"
            output=$(skopeo inspect --creds "${QUAY_IO_USERNAME}:${QUAY_IO_PASSWORD}" "docker://$imageName" 2>&1)
            
            if [ $? -ne 0 ]; then
              if echo "$output" | grep -q "manifest unknown"; then
                echo "No image for tag 'latest' in $repo"
                imageOutput="$imageOutput ## No image for tag ${{ github.event.inputs.tag_Name }} in $repo\n"
              else
                echo "Failed to retrieve manifest for $repo: $output"
                imageOutput="$imageOutput ## Failed to retrieve manifest for $repo: $output\n"
              fi
              continue
            fi
            sha=$(echo "$output" | jq -r '.Digest')
            imageOutput="$imageOutput ## quay.io/${{ github.event.inputs.organizations }}/$repo@$sha\n"
          done
          imageOutput=$(echo | sed "i$imageOutput")
          SUMMARY=$'# Latest SHA for ${{ github.event.inputs.tag_Name }} tag is \n'$imageOutput
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
          
